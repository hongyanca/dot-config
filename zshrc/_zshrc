SESSION_NAME="ó°Š "
if [[ -n "$TERM_PROGRAM" ]]; then
  if [[ "$TERM_PROGRAM" == "ghostty" ]]; then
    # Check if the session with the given name already exists
    if tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
      # Session exists
      if [ -z "$TMUX" ]; then
        # Not in a tmux session, attach to the existing session
        tmux attach-session -t "$SESSION_NAME"
      else
        # Already in a tmux session, switch to the existing session
        tmux switch-client -t "$SESSION_NAME"
      fi
    else
      # Session does not exist, create it
      if [ -z "$TMUX" ]; then
        # Not in a tmux session, create and attach to the new session
        tmux new-session -d -s "$SESSION_NAME" \; attach-session -t "$SESSION_NAME"
      else
        # Already in a tmux session, create a sibling session
        tmux new-session -d -s "$SESSION_NAME" \; switch-client -t "$SESSION_NAME"
      fi
    fi
  fi
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/opt/ruby/bin:/usr/local/bin:/usr/local/user_scripts:/Applications/Tailscale.app/Contents/MacOS:/Users/yanh/Applications/vmware-ovftool:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/yanh/.oh-my-zsh"

# ZSH_THEME="agnoster-homer"
ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
  extract git
)
eval "$(zoxide init zsh)"

source $ZSH/oh-my-zsh.sh

# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)
export FZF_DEFAULT_COMMAND="fd --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build} --type f"

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# export PATH="/usr/local/opt/python@3.10/bin:$PATH"
# export LDFLAGS="-L/usr/local/opt/python@3.10/lib"
# export PKG_CONFIG_PATH="/usr/local/opt/python@3.10/lib/pkgconfig"

# Remote Docker engine
export DOCKER_HOST=ssh://dev-ml

# Google AI Studio API Key for avante
# Google AI Studio API Key for Zed

alias ls="lsd"
alias lt="lsd --tree"
alias tree="lsd --tree"
alias tls="tmux ls"
alias td="tmux detach"
alias tns="/usr/local/user_scripts/tmux-new-session.sh "
alias tct="tmux choose-tree"
alias ta="/usr/local/user_scripts/select-tmux-session.sh"
# alias nvim='NVIM_APPNAME=nvim-lazyvim nvim'
alias nvim='NVIM_APPNAME=nvim-dev /Users/yanh/Applications/nvim-macos-x86_64/bin/nvim'
alias vi="nvim"
alias vim="nvim"
alias k="kubectl"
alias j="z"
alias copilot='gh copilot'
alias gcs='gh copilot suggest'
alias gce='gh copilot explain'
alias fcd='cd "$(fd -t d | fzf)"'
alias fop='open "$(fd -t d | fzf)"'

function y() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    builtin cd -- "$cwd"
  fi
  rm -f -- "$tmp"
}

source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# https://unix.stackexchange.com/questions/273861/unlimited-history-in-zsh
setopt APPEND_HISTORY
setopt SHARE_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_SAVE_NO_DUPS
setopt HIST_IGNORE_SPACE
SAVEHIST=1000000
HISTSIZE=1000000

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
